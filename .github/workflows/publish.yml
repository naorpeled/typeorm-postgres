name: Publish Docker image

on:
  push:
    tags: ["v*.*.*"] # Trigger on version tags like v1.0.0
  workflow_dispatch: # Allows manual triggering

env:
  REGISTRY: ghcr.io
  # IMAGE_NAME will be set to <owner>/<repository_name> by default
  # If your GitHub username/org is 'myuser' and repo is 'myrepo',
  # this will be 'myuser/myrepo'.
  # You can override this if your GHCR image name is different.
  # IMAGE_NAME: ${{ github.repository_owner }}/your-custom-image-name

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write # Required to publish to GHCR

    strategy:
      matrix:
        include:
          # Latest PostgreSQL with latest pgvector
          - pg_version: 16
            pgvector_version: v0.8.0
            postgis_version: 3
            latest_tag: true # This combination will also be tagged 'latest'
          # Previous PostgreSQL with latest pgvector
          - pg_version: 15
            pgvector_version: v0.8.0
            postgis_version: 3
            latest_tag: false
          # Latest PostgreSQL with previous pgvector
          - pg_version: 16
            pgvector_version: v0.7.2
            postgis_version: 3
            latest_tag: false
          # Previous PostgreSQL with previous pgvector
          - pg_version: 15
            pgvector_version: v0.7.2
            postgis_version: 3
            latest_tag: false

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ github.event.repository.name }}
          tags: |
            type=raw,value=pg${{ matrix.pg_version }}-postgis${{ matrix.postgis_version }}-pgvector${{ matrix.pgvector_version }}
            type=raw,value=latest,enable=${{ matrix.latest_tag }}
            # Add tag from git tag if event is a tag push
            type=ref,event=tag

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            MY_PG_VER=${{ matrix.pg_version }}
            MY_POSTGIS_VER=${{ matrix.postgis_version }}
            MY_PGVECTOR_VER=${{ matrix.pgvector_version }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
